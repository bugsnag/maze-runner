#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative '../lib/maze'
require_relative '../lib/maze/browser_stack_utils'
require_relative '../lib/maze/logger'
require 'net/http'
require 'json'
require 'uri'
require 'fileutils'

class DownloadLogEntry
  def start(args)
    @args = args.dup
    options = args
    username = ENV['BROWSER_STACK_USERNAME']
    access_key = ENV['BROWSER_STACK_ACCESS_KEY']
    build_name = []
    if File.file? options[0]
      File.readlines(options[0]).each do |line|
        build_name << line.gsub("\n", "")
      end
    else
      build_name << options[0]
    end

    build_name.each do |name|
      build_info = Maze::BrowserStackUtils.build_info username,
                                                      access_key,
                                                      name

      $logger.info "Getting logs for build: #{name}"

      build_info.each_with_index do |session, index|
        $logger.info "Downloading Device Logs for Session: #{index + 1}"
        Maze::BrowserStackUtils.download_log username,
                                             access_key,
                                             name,
                                             session['automation_session']['device_logs_url'],
                                             index + 1
        $logger.info "Downloading Appium Logs for Session: #{index + 1}"
        Maze::BrowserStackUtils.download_log username,
                                             access_key,
                                             name,
                                             session['automation_session']['appium_logs_url'],
                                             index + 1
      end
    end
  end
end

DownloadLogEntry.new.start(ARGV)
